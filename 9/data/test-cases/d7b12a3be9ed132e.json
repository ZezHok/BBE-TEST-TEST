{"uid":"d7b12a3be9ed132e","name":"test_id[456]","fullName":"main_test#test_id","historyId":"4a000a64c500647dc344794ec2b1c085","time":{"start":1724707537828,"stop":1724707537828,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code","statusTrace":"self = <allure_commons._allure.fixture object at 0x7f32f0267e60>, args = ()\nkwargs = {}\n\n    def __call__(self, *args, **kwargs):\n        self.parameters = func_parameters(self._fixture_function, *args, **kwargs)\n    \n        with self:\n>           return self._fixture_function(*args, **kwargs)\n\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/allure_commons/_allure.py:221: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nbase_url = 'https://petstore.swagger.io/v2', pet_id = 92296544\ndata = {'category': {'id': 0, 'name': 'string'}, 'id': 92296544, 'name': 'Peeesik', 'photoUrls': ['string'], ...}\n\n    @pytest.fixture(scope=\"session\", autouse=True)\n    def setup(base_url, pet_id, data):\n        create_pet = requests.post(f'{base_url}/pet', json=data)\n    \n        print('\\nTest of create pet')\n        print('Text: ' + create_pet.text)\n        print('Status: ' + str(create_pet.status_code))\n        assert create_pet.status_code == 200\n    \n        yield\n    \n        delete_pet = requests.delete(f'{base_url}/pet/{pet_id}')\n    \n        print('\\nDelete pet')\n        print('Text:' + delete_pet.text)\n        print('Status: ' + str(delete_pet.status_code))\n>       assert delete_pet.status_code == 200\nE       assert 404 == 200\nE        +  where 404 = <Response [404]>.status_code\n\nconftest.py:80: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"pet_id","time":{"start":1724707535569,"stop":1724707535569,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"data","time":{"start":1724707535569,"stop":1724707535569,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1724707535569,"stop":1724707535569,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1724707535570,"stop":1724707536008,"duration":438},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"update_pet_data","time":{"start":1724707536008,"stop":1724707536008,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code","statusTrace":"self = <allure_commons._allure.fixture object at 0x7f32f0267e60>, args = ()\nkwargs = {}\n\n    def __call__(self, *args, **kwargs):\n        self.parameters = func_parameters(self._fixture_function, *args, **kwargs)\n    \n        with self:\n>           return self._fixture_function(*args, **kwargs)\n\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/allure_commons/_allure.py:221: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nbase_url = 'https://petstore.swagger.io/v2', pet_id = 92296544\ndata = {'category': {'id': 0, 'name': 'string'}, 'id': 92296544, 'name': 'Peeesik', 'photoUrls': ['string'], ...}\n\n    @pytest.fixture(scope=\"session\", autouse=True)\n    def setup(base_url, pet_id, data):\n        create_pet = requests.post(f'{base_url}/pet', json=data)\n    \n        print('\\nTest of create pet')\n        print('Text: ' + create_pet.text)\n        print('Status: ' + str(create_pet.status_code))\n        assert create_pet.status_code == 200\n    \n        yield\n    \n        delete_pet = requests.delete(f'{base_url}/pet/{pet_id}')\n    \n        print('\\nDelete pet')\n        print('Text:' + delete_pet.text)\n        print('Status: ' + str(delete_pet.status_code))\n>       assert delete_pet.status_code == 200\nE       assert 404 == 200\nE        +  where 404 = <Response [404]>.status_code\n\nconftest.py:80: AssertionError","steps":[],"attachments":[{"uid":"acd8a94a6116326a","name":"stdout","source":"acd8a94a6116326a.txt","type":"text/plain","size":30}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[{"name":"setup::0","time":{"start":1724707537828,"stop":1724707538166,"duration":338},"status":"failed","statusMessage":"AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 221, in __call__\n    return self._fixture_function(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 906, in _teardown_yield_fixture\n    next(it)\n  File \"/home/runner/work/BBE-TEST-TEST/BBE-TEST-TEST/conftest.py\", line 80, in setup\n    assert delete_pet.status_code == 200\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"labels":[{"name":"suite","value":"main_test"},{"name":"host","value":"fv-az525-795"},{"name":"thread","value":"2084-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"main_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"test_data","value":"456"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"d7b12a3be9ed132e.json","parameterValues":["456"]}